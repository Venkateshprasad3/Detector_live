{"version":3,"sources":["Component/Header.js","firebase.js","Component/Comment.js","Component/Display.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Component","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","Contact","useState","details","setDetails","name","SetName","value","onChange","e","target","onClick","preventDefault","fetch","then","response","json","data","ipa","IPv4","console","log","collection","add","ip","comments","alert","catch","error","Display","props","latestComments","commentsSnapShot","Comment","forEach","doc","push","setState","dataSource","state","ref","this","unsubscribe","onSnapshot","map","user","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAaeA,E,4JATb,WACE,OACE,8BACE,kD,GAJaC,a,QCWjBC,E,MAFeC,EAASC,cATP,CACjBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAKQC,YC+CJC,EAtDM,WAAM,IAAD,EAEKC,mBAAS,IAFd,mBAEfC,EAFe,KAEPC,EAFO,OAgBDF,mBAAS,IAhBR,mBAgBfG,EAhBe,KAgBVC,EAhBU,KAyCtB,OACE,8BACE,mCACI,0BAAUC,MAAOF,EAAMG,SAAU,SAACC,GAAD,OAAKH,EAAQG,EAAEC,OAAOH,UACvD,uBAEA,wBAAQI,QA9BG,SAACF,GAChBA,EAAEG,iBARNC,MAAM,wEACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAI,OAAEb,EAAWa,MAUhB,IAAIC,EAAIf,EAAQgB,KAChBC,QAAQC,IAAIH,GAIf3B,EAAG+B,WAAW,YAAYC,IAAI,CAC1BC,GAAGN,EACHO,SAASpB,IAEZS,MAAK,WACFY,MAAM,wBAETC,OAAO,SAAAC,GACJF,MAAM,6BAGVpB,EAAQ,KASJ,0BCpDSuB,E,kDACjB,WAAYC,GACX,IAAD,8BAEI,cAAMA,IAoBVC,eAAiB,SAACC,GACd,IAAMC,EAAU,GAChBD,EAAiBE,SAAQ,SAACC,GAAS,IAC3BV,EAAYU,EAAIlB,OAAhBQ,SACNQ,EAAQG,KAAK,CACXX,gBAGJ,EAAKY,SAAS,CACZC,WAAaL,IAEfb,QAAQC,IAAI,EAAKkB,MAAMD,aA9BvB,EAAKE,IAAMjD,EAAG+B,WAAW,YACzB,EAAKiB,MAAM,CACPD,WAAa,CACX,CAACb,SAAS,MANpB,E,qDAaA,WACIgB,KAAKC,YAAcD,KAAKD,IAAIG,WAAWF,KAAKV,kB,oBA2B9C,WAEC,OAEK,8BAEMU,KAAKF,MAAMD,WAAWM,KAAI,SAACC,GACzB,OAAM,8BAAK,iCAASA,EAAKpB,sB,GAlDRnC,aCctBwD,MAXf,WACE,OACE,sBAAKC,UAAU,MAAf,UACC,kDACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCCUC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e2079d35.chunk.js","sourcesContent":["import React ,{Component} from 'react';\r\n\r\n\r\nclass Header extends Component{\r\n  render(){\r\n    return(\r\n      <div>\r\n        <center>Header</center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import firebase from 'firebase';\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyB6wlx6l26pc4ed7DPOGGqtgBpKO9GRrtM\",\r\n    authDomain: \"detector-9cd20.firebaseapp.com\",\r\n    projectId: \"detector-9cd20\",\r\n    storageBucket: \"detector-9cd20.appspot.com\",\r\n    messagingSenderId: \"179240862503\",\r\n    appId: \"1:179240862503:web:2095de17efb07649959f02\"\r\n  };\r\n  // Initialize Firebase\r\n  var firebaseApp =firebase.initializeApp(firebaseConfig);\r\n\r\nvar db=firebaseApp.firestore();\r\n\r\nexport  { db } ;","import React ,{useState} from 'react';\r\nimport { db } from '../firebase';\r\n\r\n\r\n\r\n    \r\n  \r\n      const Contact =()=> {\r\n\r\n    const [details,setDetails]=useState(\"\");\r\n   \r\n// \r\n  \r\n//     alert(details.IPv4);\r\n\r\n// }\r\nconst getGeoLocationDetails= ()=>{\r\n    fetch(\"https://geolocation-db.com/json/afa4d000-8eb9-11eb-a6ff-2538b793e762\")\r\n    .then(response =>response.json())\r\n    .then(data=>setDetails(data))\r\n    }\r\n\r\n\r\n    const [name,SetName]=useState(\"\");\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        getGeoLocationDetails();\r\n       \r\n\r\n           var ipa=details.IPv4;\r\n           console.log(ipa);\r\n\r\n\r\n\r\n        db.collection('comments').add({\r\n            ip:ipa,\r\n            comments:name\r\n        })\r\n        .then(()=>{\r\n            alert(\"comment submitted\");\r\n        })\r\n        .catch( error=>{\r\n            alert(\"unsucessful submission\");\r\n        })\r\n\r\n        SetName('');\r\n    };\r\n\r\n    return(\r\n      <div>\r\n        <center>\r\n            <textarea value={name} onChange={(e)=>SetName(e.target.value)}></textarea>\r\n            <br/>\r\n            \r\n            <button onClick={handleSubmit}>Submit</button>\r\n        \r\n        </center>\r\n      </div>\r\n    );\r\n    }\r\n\r\nexport default Contact;","import React,{Component} from 'react';\r\nimport { db } from '../firebase';\r\nexport default class Display extends Component{\r\n    constructor(props)\r\n    {\r\n     \r\n        super(props);\r\n        this.ref = db.collection('comments');\r\n        this.state={\r\n            dataSource : [\r\n              {comments:''}\r\n\r\n            ]\r\n          }\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.unsubscribe = this.ref.onSnapshot(this.latestComments);\r\n        \r\n      }\r\n\r\n\r\n\r\n\r\n    \r\n    latestComments = (commentsSnapShot) =>{\r\n        const Comment = [];\r\n        commentsSnapShot.forEach((doc) => {\r\n        const { comments} = doc.data();\r\n          Comment.push({\r\n            comments\r\n          });\r\n        });\r\n        this.setState({\r\n          dataSource : Comment,\r\n        });\r\n        console.log(this.state.dataSource);\r\n\r\n      \r\n        \r\n        \r\n      }\r\n\r\n\r\n      render(){\r\n     \r\n       return(\r\n           \r\n            <div>\r\n                {\r\n                  this.state.dataSource.map((user)=>{\r\n                    return<div><center>{user.comments}</center></div>\r\n                  })\r\n                }\r\n\r\n            </div>\r\n       )\r\n     }\r\n      \r\n}","\nimport Heady from './Component/Header';\nimport Ta from './Component/Comment';\nimport Dis from './Component/Display';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <h1>First Deployment</h1>\n     <Heady/>\n     <Ta/>\n     <Dis/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}